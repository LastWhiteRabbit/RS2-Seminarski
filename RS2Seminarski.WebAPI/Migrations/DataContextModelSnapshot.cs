// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS2Seminarski.WebAPI.Database;

#nullable disable

namespace RS2Seminarski.WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"), 1L, 1);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ExerciseImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseId");

                    b.HasIndex("LevelId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            ExerciseId = 1,
                            About = "The wide-grip bench press is a compound exercise targeting the chest and, to a lesser extent, the triceps. The main difference between this exercise and the standard bench press is that the hands are placed farther apart on the bar. Many lifters find they can handle more weight going wide than with narrower grips, although it's also worth noting that plenty of banged-up lifters have said benching with a wide grip may also have contributed to their shoulder injuries and pain. The wide-grip bench is often used as a chest-building movement in chest or upper-body workouts, or as an accessory movement for the traditional bench press.",
                            ExerciseName = "Bench press",
                            Instruction = "Lie back on a flat bench with feet firm on the floor. Using a wide, pronated (palms forward) grip that is around 3 inches away from shoulder width (for each hand), lift the bar from the rack and hold it straight over you with your arms locked. The bar will be perpendicular to the torso and the floor. This will be your starting position. As you breathe in, come down slowly until you feel the bar on your middle chest. After a second pause, bring the bar back to the starting position as you breathe out and push the bar using your chest muscles. Lock your arms and squeeze your chest in the contracted position, hold for a second and then start coming down slowly again. Tip: It should take at least twice as long to go down than to come up. Repeat the movement for the prescribed amount of repetitions.",
                            LevelId = 1
                        },
                        new
                        {
                            ExerciseId = 2,
                            About = "The pull-up is a multi-joint bodyweight exercise that builds strength and muscle in the upper back, biceps, and core. It is often used as a measurement tool in military or tactical fitness tests, and is an excellent gauge of “relative strength” which is strength in relation to bodyweight. ",
                            ExerciseName = "Pullups",
                            Instruction = "Grab the pull-up bar with the palms facing forward using the prescribed grip.As you have both arms extended in front of you holding the bar at the chosen grip width, bring your torso back around 30 degrees or so while creating a curvature on your lower back and sticking your chest out. This is your starting position.",
                            LevelId = 3
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.ExerciseExerciseType", b =>
                {
                    b.Property<int>("ExerciseExerciseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseExerciseTypeId"), 1L, 1);

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseTypeId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseExerciseTypeId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("ExerciseTypeId");

                    b.ToTable("ExerciseExerciseTypes");

                    b.HasData(
                        new
                        {
                            ExerciseExerciseTypeId = 1,
                            ExerciseId = 1,
                            ExerciseTypeId = 4
                        },
                        new
                        {
                            ExerciseExerciseTypeId = 2,
                            ExerciseId = 2,
                            ExerciseTypeId = 5
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.ExerciseMuscle", b =>
                {
                    b.Property<int>("ExerciseMuscleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseMuscleId"), 1L, 1);

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("MuscleId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseMuscleId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("MuscleId");

                    b.ToTable("ExerciseMuscles");

                    b.HasData(
                        new
                        {
                            ExerciseMuscleId = 1,
                            ExerciseId = 1,
                            MuscleId = 1
                        },
                        new
                        {
                            ExerciseMuscleId = 2,
                            ExerciseId = 2,
                            MuscleId = 3
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.ExerciseType", b =>
                {
                    b.Property<int>("ExerciseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseTypeId"), 1L, 1);

                    b.Property<string>("ExerciseTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseTypeId");

                    b.ToTable("ExerciseTypes");

                    b.HasData(
                        new
                        {
                            ExerciseTypeId = 1,
                            ExerciseTypeName = "Cardio"
                        },
                        new
                        {
                            ExerciseTypeId = 2,
                            ExerciseTypeName = "Olympic Weightlifting"
                        },
                        new
                        {
                            ExerciseTypeId = 3,
                            ExerciseTypeName = "Plyometrics"
                        },
                        new
                        {
                            ExerciseTypeId = 4,
                            ExerciseTypeName = "Powerlifting"
                        },
                        new
                        {
                            ExerciseTypeId = 5,
                            ExerciseTypeName = "Strength"
                        },
                        new
                        {
                            ExerciseTypeId = 6,
                            ExerciseTypeName = "Stretching"
                        },
                        new
                        {
                            ExerciseTypeId = 7,
                            ExerciseTypeName = "Strongman"
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelId"), 1L, 1);

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelId");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            LevelId = 1,
                            LevelName = "Beginner"
                        },
                        new
                        {
                            LevelId = 2,
                            LevelName = "Intermediate"
                        },
                        new
                        {
                            LevelId = 3,
                            LevelName = "Expert"
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.Muscle", b =>
                {
                    b.Property<int>("MuscleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MuscleId"), 1L, 1);

                    b.Property<string>("MuscleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MuscleId");

                    b.ToTable("Muscles");

                    b.HasData(
                        new
                        {
                            MuscleId = 1,
                            MuscleName = "Chest"
                        },
                        new
                        {
                            MuscleId = 2,
                            MuscleName = "Forearms"
                        },
                        new
                        {
                            MuscleId = 3,
                            MuscleName = "Lats"
                        },
                        new
                        {
                            MuscleId = 4,
                            MuscleName = "Middle Back"
                        },
                        new
                        {
                            MuscleId = 5,
                            MuscleName = "Lower Back"
                        },
                        new
                        {
                            MuscleId = 6,
                            MuscleName = "Neck"
                        },
                        new
                        {
                            MuscleId = 7,
                            MuscleName = "Quadriceps"
                        },
                        new
                        {
                            MuscleId = 8,
                            MuscleName = "Hamstrings"
                        },
                        new
                        {
                            MuscleId = 9,
                            MuscleName = "Calves"
                        },
                        new
                        {
                            MuscleId = 10,
                            MuscleName = "Triceps"
                        },
                        new
                        {
                            MuscleId = 11,
                            MuscleName = "Traps"
                        },
                        new
                        {
                            MuscleId = 12,
                            MuscleName = "Shoulders"
                        },
                        new
                        {
                            MuscleId = 13,
                            MuscleName = "Abdominals"
                        },
                        new
                        {
                            MuscleId = 14,
                            MuscleName = "Glutes"
                        },
                        new
                        {
                            MuscleId = 15,
                            MuscleName = "Biceps"
                        },
                        new
                        {
                            MuscleId = 16,
                            MuscleName = "Adductors"
                        },
                        new
                        {
                            MuscleId = 17,
                            MuscleName = "Abductors"
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Administrator"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Trainer"
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.Routine", b =>
                {
                    b.Property<int>("RoutineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoutineId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("RoutineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoutineId");

                    b.ToTable("Routines");

                    b.HasData(
                        new
                        {
                            RoutineId = 1,
                            Description = " Push-Pull-Legs",
                            Rating = 0,
                            RoutineName = "PPL"
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.RoutineExercise", b =>
                {
                    b.Property<int>("RoutineExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoutineExerciseId"), 1L, 1);

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("RoutineId")
                        .HasColumnType("int");

                    b.HasKey("RoutineExerciseId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("RoutineId");

                    b.ToTable("RoutineExercises");

                    b.HasData(
                        new
                        {
                            RoutineExerciseId = 1,
                            ExerciseId = 1,
                            RoutineId = 1
                        },
                        new
                        {
                            RoutineExerciseId = 2,
                            ExerciseId = 2,
                            RoutineId = 1
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.RoutineUser", b =>
                {
                    b.Property<int>("RoutineUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoutineUserId"), 1L, 1);

                    b.Property<int>("RoutineId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoutineUserId");

                    b.HasIndex("RoutineId");

                    b.HasIndex("UserId");

                    b.ToTable("RoutineUsers");

                    b.HasData(
                        new
                        {
                            RoutineUserId = 1,
                            RoutineId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "test@fit.ba",
                            Name = "Test",
                            PasswordHash = "7p3l25Cnbg+2QxoQRElFJjIqHgA=",
                            PaswordSalt = "H4pOSYtdeJgGsU/6HRTxqw==",
                            Surname = "Test",
                            UserName = "test"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "admin@fit.ba",
                            Name = "Administrator",
                            PasswordHash = "JfJzsL3ngGWki+Dn67C+8WLy73I=",
                            PaswordSalt = "7TUJfmgkkDvcY3PB/M4fhg==",
                            Surname = "Administrator",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"), 1L, 1);

                    b.Property<DateTime>("DateEdited")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            DateEdited = new DateTime(2022, 7, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            UserRoleId = 2,
                            DateEdited = new DateTime(2022, 7, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            RoleId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.WeatherForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.Exercise", b =>
                {
                    b.HasOne("RS2Seminarski.WebAPI.Database.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.ExerciseExerciseType", b =>
                {
                    b.HasOne("RS2Seminarski.WebAPI.Database.Exercise", "Exercise")
                        .WithMany("ExerciseExerciseTypes")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS2Seminarski.WebAPI.Database.ExerciseType", "ExerciseType")
                        .WithMany("ExerciseExerciseTypes")
                        .HasForeignKey("ExerciseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("ExerciseType");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.ExerciseMuscle", b =>
                {
                    b.HasOne("RS2Seminarski.WebAPI.Database.Exercise", "Exercise")
                        .WithMany("ExerciseMuscles")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS2Seminarski.WebAPI.Database.Muscle", "Muscle")
                        .WithMany("ExerciseMuscles")
                        .HasForeignKey("MuscleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Muscle");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.RoutineExercise", b =>
                {
                    b.HasOne("RS2Seminarski.WebAPI.Database.Exercise", "Exercise")
                        .WithMany("RoutineExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS2Seminarski.WebAPI.Database.Routine", "Routine")
                        .WithMany("RoutineExercises")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.RoutineUser", b =>
                {
                    b.HasOne("RS2Seminarski.WebAPI.Database.Routine", "Routine")
                        .WithMany("RoutineUsers")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS2Seminarski.WebAPI.Database.User", "User")
                        .WithMany("RoutineUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Routine");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.UserRole", b =>
                {
                    b.HasOne("RS2Seminarski.WebAPI.Database.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS2Seminarski.WebAPI.Database.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.Exercise", b =>
                {
                    b.Navigation("ExerciseExerciseTypes");

                    b.Navigation("ExerciseMuscles");

                    b.Navigation("RoutineExercises");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.ExerciseType", b =>
                {
                    b.Navigation("ExerciseExerciseTypes");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.Muscle", b =>
                {
                    b.Navigation("ExerciseMuscles");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.Routine", b =>
                {
                    b.Navigation("RoutineExercises");

                    b.Navigation("RoutineUsers");
                });

            modelBuilder.Entity("RS2Seminarski.WebAPI.Database.User", b =>
                {
                    b.Navigation("RoutineUsers");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
